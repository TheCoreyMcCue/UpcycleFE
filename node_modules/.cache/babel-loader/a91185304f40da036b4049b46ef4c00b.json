{"ast":null,"code":"var _jsxFileName = \"/Users/corey/Desktop/UpCycleSkate/upcycle-skate/src/components/Listing/Listing.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useState } from \"react\";\nimport \"./Listing.css\";\nimport { useStateValue } from \"../../State/StateProvider\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { CardActionArea, Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst listing = _ref => {\n  _s();\n\n  let {\n    id,\n    title,\n    image,\n    price,\n    rating,\n    description\n  } = _ref;\n  const [{\n    cart\n  }, dispatch] = useStateValue();\n  const [toggleDescription, setToggleDescription] = useState(true);\n  console.log(\"cart\", cart);\n\n  const addToCart = () => {\n    dispatch({\n      type: \"ADD_TO_CART\",\n      item: {\n        id: id,\n        title: title,\n        image: image,\n        price: price,\n        rating: rating,\n        description: description\n      }\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div className=\"listing\">\n    //   <div className=\"listing__info\">\n    //     <h5>{title}</h5>\n    //     <div className=\"listing__price\">\n    //       <p>\n    //         <small>$</small>\n    //         <strong>{price}</strong>\n    //       </p>\n    //       <p>\n    //         <small>seller rating: </small>\n    //       </p>\n    //       <div className=\"listing__rating\">\n    //         {Array(rating)\n    //           .fill()\n    //           .map((rating, index) => (\n    //             <p key={uuid()}>️️⭐</p>\n    //           ))}\n    //       </div>\n    //     </div>\n    //   </div>\n    //   <img className=\"listing__image\" src={image} alt=\"\" />\n    //   <button onClick={addToCart} className=\"listing__button\">\n    //     Add to Cart\n    //   </button>\n    // </div>\n    _jsxDEV(Card, {\n      sx: {\n        maxWidth: \"100vw\",\n        margin: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          height: \"150\",\n          image: image,\n          alt: `image of ${title}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\"\n            },\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"div\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h6\",\n            component: \"div\",\n            children: [\"$\", price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            onClick: () => setToggleDescription(!toggleDescription),\n            sx: toggleDescription && {\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n              display: \"-webkit-box\",\n              WebkitLineClamp: \"3\",\n              WebkitBoxOrient: \"vertical\"\n            },\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"5%\",\n              display: \"flex\",\n              justifyContent: \"space-around\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"success\",\n              onClick: addToCart,\n              children: \"Add to Cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(listing, \"LCqr/62xvey2Tq6oh0Df20Tl46I=\", false, function () {\n  return [useStateValue];\n});\n\nexport default listing;","map":{"version":3,"sources":["/Users/corey/Desktop/UpCycleSkate/upcycle-skate/src/components/Listing/Listing.js"],"names":["React","useState","useStateValue","Card","CardContent","CardMedia","Typography","CardActionArea","Button","listing","id","title","image","price","rating","description","cart","dispatch","toggleDescription","setToggleDescription","console","log","addToCart","type","item","maxWidth","margin","display","justifyContent","overflow","textOverflow","WebkitLineClamp","WebkitBoxOrient","marginTop"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useState } from \"react\";\nimport \"./Listing.css\";\nimport { useStateValue } from \"../../State/StateProvider\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { CardActionArea, Button } from \"@mui/material\";\n\nconst listing = ({ id, title, image, price, rating, description }) => {\n  const [{ cart }, dispatch] = useStateValue();\n  const [toggleDescription, setToggleDescription] = useState(true);\n\n  console.log(\"cart\", cart);\n\n  const addToCart = () => {\n    dispatch({\n      type: \"ADD_TO_CART\",\n      item: {\n        id: id,\n        title: title,\n        image: image,\n        price: price,\n        rating: rating,\n        description: description,\n      },\n    });\n  };\n  return (\n    // <div className=\"listing\">\n    //   <div className=\"listing__info\">\n    //     <h5>{title}</h5>\n    //     <div className=\"listing__price\">\n    //       <p>\n    //         <small>$</small>\n    //         <strong>{price}</strong>\n    //       </p>\n    //       <p>\n    //         <small>seller rating: </small>\n    //       </p>\n    //       <div className=\"listing__rating\">\n    //         {Array(rating)\n    //           .fill()\n    //           .map((rating, index) => (\n    //             <p key={uuid()}>️️⭐</p>\n    //           ))}\n    //       </div>\n    //     </div>\n    //   </div>\n    //   <img className=\"listing__image\" src={image} alt=\"\" />\n    //   <button onClick={addToCart} className=\"listing__button\">\n    //     Add to Cart\n    //   </button>\n    // </div>\n    <Card sx={{ maxWidth: \"100vw\", margin: 1 }}>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          height=\"150\"\n          image={image}\n          alt={`image of ${title}`}\n        />\n        <CardContent>\n          <Typography\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n            }}\n            gutterBottom\n            variant=\"h5\"\n            component=\"div\"\n          >\n            {title}\n          </Typography>\n          <Typography gutterBottom variant=\"h6\" component=\"div\">\n            ${price}\n          </Typography>\n          <Typography\n            onClick={() => setToggleDescription(!toggleDescription)}\n            sx={\n              toggleDescription && {\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                display: \"-webkit-box\",\n                WebkitLineClamp: \"3\",\n                WebkitBoxOrient: \"vertical\",\n              }\n            }\n            variant=\"body2\"\n            color=\"text.secondary\"\n          >\n            {description}\n          </Typography>\n          <div\n            style={{\n              marginTop: \"5%\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Button variant=\"contained\" color=\"success\" onClick={addToCart}>\n              Add to Cart\n            </Button>\n          </div>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nexport default listing;\n"]},"metadata":{},"sourceType":"module"}