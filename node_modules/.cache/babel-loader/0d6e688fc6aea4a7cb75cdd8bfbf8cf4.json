{"ast":null,"code":"export const initialState = {\n  cart: [localStorage.getItem('items')] // user: null,\n\n};\nexport const reducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      return { ...state,\n        cart: [...state.cart, action.item]\n      };\n\n    case \"UPDATE_CART\":\n      return { ...state,\n        cart: action.cart\n      };\n    // case \"REMOVE_FROM_CART\":\n    //   const index = state.cart.findIndex(\n    //     (cartItem) => cartItem.id === action.id\n    //   );\n    //   let newCart = [...state.cart];\n    //   if (index >= 0) {\n    //     newCart.splice(index, 1);\n    //   } else {\n    //     console.warn(\n    //       `Cant remove product (id: ${action.id}) as its not in cart!`\n    //     );\n    //   }\n    //   return { ...state, cart: newCart };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/corey/Desktop/UpCycleSkate/upcycle-skate/src/State/reducer.js"],"names":["initialState","cart","localStorage","getItem","reducer","state","action","console","log","type","item"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,IAAI,EAAE,CAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CADoB,CAE1B;;AAF0B,CAArB;AAKP,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,aAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELJ,QAAAA,IAAI,EAAE,CAAC,GAAGI,KAAK,CAACJ,IAAV,EAAgBK,MAAM,CAACI,IAAvB;AAFD,OAAP;;AAIA,SAAK,aAAL;AACE,aAAO,EACL,GAAGL,KADE;AAELJ,QAAAA,IAAI,EAAEK,MAAM,CAACL;AAFR,OAAP;AAIJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACE,aAAOI,KAAP;AAzBJ;AA2BD,CA7BM","sourcesContent":["export const initialState = {\n  cart: [localStorage.getItem('items')],\n  // user: null,\n};\n\nexport const reducer = (state, action) => {\n  console.log(action);\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      return {\n        ...state,\n        cart: [...state.cart, action.item],\n      };\n      case \"UPDATE_CART\":\n        return {\n          ...state,\n          cart: action.cart,\n        };\n    // case \"REMOVE_FROM_CART\":\n    //   const index = state.cart.findIndex(\n    //     (cartItem) => cartItem.id === action.id\n    //   );\n    //   let newCart = [...state.cart];\n    //   if (index >= 0) {\n    //     newCart.splice(index, 1);\n    //   } else {\n    //     console.warn(\n    //       `Cant remove product (id: ${action.id}) as its not in cart!`\n    //     );\n    //   }\n    //   return { ...state, cart: newCart };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}